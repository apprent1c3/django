import os

from django.db.models import FilePathField
from django.test import SimpleTestCase


class FilePathFieldTests(SimpleTestCase):
    def test_path(self):
        """

        Tests the functionality of the FilePathField class in relation to its path attribute.

        Verifies that the FilePathField instance correctly sets and retrieves its path attribute,
        ensuring that it matches the expected value. Additionally, checks that the path attribute
        is properly propagated to the form field generated by the FilePathField instance.

        """
        path = os.path.dirname(__file__)
        field = FilePathField(path=path)
        self.assertEqual(field.path, path)
        self.assertEqual(field.formfield().path, path)

    def test_callable_path(self):
        """
        Tests that a FilePathField can be initialized with a callable path.

        This test case verifies that the FilePathField class correctly handles a path
        provided as a callable, ensuring that the path is correctly resolved and
        returned when accessed through the `path` method or when creating a form field.

        The test covers the case where a path is generated dynamically by a function,
        and checks that the resulting path is correctly stored and retrieved from the
        FilePathField instance.
        """
        path = os.path.dirname(__file__)

        def generate_path():
            return path

        field = FilePathField(path=generate_path)
        self.assertEqual(field.path(), path)
        self.assertEqual(field.formfield().path, path)
